###thought
"""
Lets think step by step..I need to extract the following details:
	Patient Name: db_sql_node
	Policy Start Date: db_sql_node
	Policy End Date: db_sql_node
	Policy Claim Limit: db_sql_node
	Policy Number: db_sql_node

db_sql_node requires 
I can perform them sequentially using the StateGraph. I should add the required keys to AgentState
"""

###python
class AgentState(TypedDict):
    bills: str  # base64 img
    receipts: str  # base64 img
    discharge_summary: str  # base64 img
    lab_report: str  # base64 img
    patient_id: str
    insurer_name: str
    patient_name: str
    hospital_name: str
    policy_start_date: str
    policy_end_date: str
    policy_no: str
    claim_limit: str
    policy_active: bool

def extraction_tasks(result):
    builder = StateGraph(AgentState)

    name_db_lookup = functools.partial(db_sql_node, information_required="patient_name", details="patient_id 1")
    policy_start_db_lookup = functools.partial(db_sql_node, information_required="policy_start_date", details="patient_id 1")
    policy_end_db_lookup = functools.partial(db_sql_node, information_required="policy_end_date", details="patient_id 1")
    policy_no_db_lookup = functools.partial(db_sql_node, information_required="policy_no", details="patient_id 1")
    claim_limit_db_lookup = functools.partial(db_sql_node, information_required="claim_limit", details="patient_id 1")
    policy_active_db_lookup = functools.partial(db_sql_node, information_required="policy_active", details="patient_id 1")


    builder.add_node("name_db_lookup: db_sql_node", name_db_lookup)
    builder.add_node("policy_start_db_lookup: db_sql_node", policy_start_db_lookup)
    builder.add_node("policy_end_db_lookup: db_sql_node", policy_end_db_lookup)
    builder.add_node("policy_no_db_lookup: db_sql_node", policy_no_db_lookup)
    builder.add_node("claim_limit_db_lookup: db_sql_node", claim_limit_db_lookup)
    builder.add_node("policy_active_db_lookup: db_sql_node", policy_active_db_lookup)

    builder.add_edge("name_db_lookup: db_sql_node", "policy_start_db_lookup: db_sql_node")
    builder.add_edge("policy_start_db_lookup: db_sql_node", "policy_end_db_lookup: db_sql_node")

    builder.add_edge("policy_end_db_lookup: db_sql_node", "policy_no_db_lookup: db_sql_node")
    builder.add_edge("policy_no_db_lookup: db_sql_node", "claim_limit_db_lookup: db_sql_node")
    builder.add_edge("claim_limit_db_lookup: db_sql_node", "policy_active_db_lookup: db_sql_node")
    builder.add_edge("policy_active_db_lookup: db_sql_node", END)
    builder.set_entry_point("name_db_lookup: db_sql_node")
    graph = builder.compile()
    graph.get_graph().draw_png("samples/step.png")
    result = graph.invoke(result)
    return result


