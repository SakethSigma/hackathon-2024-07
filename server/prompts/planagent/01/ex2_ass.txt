###thought
"""
Lets think step by step...I need to verify whether patient_name and hospital_name are present in discharge_summary:
    Steps I will take:
        a. Verify patient_name, hospital_name in discharge_summary: validate_info_node
        b. Extract hospital_name from discharge_summary: info_extract_node
    I can perform them sequentially using the StateGraph
"""

###python
class AgentState(TypedDict):
    bills: str  # base64 img
    receipts: str  # base64 img
    discharge_summary: str  # base64 img
    lab_report: str  # base64 img
    patient_id: str
    insurer_name: str
    patient_name: str
    policy_start_date: str
    policy_end_date: str
    policy_no: str
    claim_limit: str
    policy_active: bool
    patient_name_hospital_name_present: bool    
    hospital_name: str

def verify_discharge_summary_details(result):

    builder = StateGraph(AgentState)
    verify_details_in_discharge_summary = functools.partial(validate_info_node, 
                                                            image_data=result.get("discharge_summary"), 
                                                            keys_to_validate=["patient_name","hospital_name"], 
                                                            condition_name = "patient_name_hospital_name_present")

    info = "Name of the hospital"
    json_format = """
    [
        {
            "hospital_name": str
        }
    ]
    """
    hospital_name_in_discharge_summary = functools.partial(info_extract_node, image_data=result.get("discharge_summary"), info = info, json_format=json_format)
    builder.add_node("verify_details_in_discharge_summary: validate_info_node", verify_details_in_discharge_summary)
    builder.add_node("hospital_name_in_discharge_summary: info_extract_node", hospital_name_in_discharge_summary)
    builder.add_edge("verify_details_in_discharge_summary: validate_info_node", "hospital_name_in_discharge_summary: info_extract_node")
    builder.add_edge("hospital_name_in_discharge_summary: info_extract_node", END)

    builder.set_entry_point("verify_details_in_discharge_summary: validate_info_node")
    graph = builder.compile()
    graph.get_graph().draw_png("samples/step.png")
    result = graph.invoke(result)

    return result


